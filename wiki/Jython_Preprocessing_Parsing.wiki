#sidebar Jython_TableOfContents
= Named Entity Recognition =
*Table of contents*
<wiki:toc max_depth="3" />

== Introduction ==

== Constituency Parsing ==

For constituency parsing, we can select between the _!BerkeleyParser_, the _!OpenNlpParser_ and the _!StanfordParser_.

The following script parses the input file and returns an output which follows the conventions used by Penn !Treebank. 

{{{
# Filename: parsing_constituency.py
}}}

You can execute the script by running:
{{{
jython parsing_constituency.py examples/example-en.txt en 2> log.txt
}}}

== Dependency Parsing ==

For dependency parsing, we can select between the _!ClearNlpDependencyParser_, the _!MaltParser_, the _!MateParser_ and the _!MstParser_.

{{{
# Filename: parsing_dependency.py
}}}

You can execute the script by running:
{{{
jython parsing_dependency.py examples/example-en.txt en 2> log.txt
}}}